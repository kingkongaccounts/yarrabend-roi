function initMap(){var e={lat:-37.781167,lng:145.029913},t=[{featureType:"landscape",stylers:[{saturation:-100},{lightness:65},{visibility:"on"}]},{featureType:"poi",stylers:[{saturation:-100},{lightness:51},{visibility:"simplified"}]},{featureType:"road.highway",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"road.arterial",stylers:[{saturation:-100},{lightness:30},{visibility:"on"}]},{featureType:"road.local",stylers:[{saturation:-100},{lightness:40},{visibility:"on"}]},{featureType:"transit",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"administrative.province",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels",stylers:[{visibility:"on"},{lightness:-25},{saturation:-100}]},{featureType:"water",elementType:"geometry",stylers:[{hue:"#ffff00"},{lightness:-25},{saturation:-97}]}],i=[],a=[],n=new google.maps.LatLngBounds;map=new google.maps.Map(document.getElementById("map"),{center:e,zoom:18,scrollwheel:!1,styles:t,disableDefaultUI:!0});var o=(new google.maps.Marker({position:e,map:map,icon:"images/map-marker-main.svg"}),new XMLHttpRequest);o.open("GET","data/markers.json",!1),o.onreadystatechange=function(){if(4===o.readyState&&200===o.status){for(var e=JSON.parse(o.responseText),t=0;t<e.length;t++){var s=parseFloat(e[t].latitude),l=parseFloat(e[t].longitude),r='<h4 class="c-map-marker__title">'+e[t].address+"</h4>";a[t]=new google.maps.InfoWindow({content:r}),i[t]=new google.maps.Marker({position:{lat:s,lng:l},icon:"images/map-marker.png",map:map,marker_index:t}),n.extend(i[t].getPosition()),i[t].addListener("click",function(e){a[this.marker_index].open(map,i[this.marker_index])})}map.fitBounds(n)}},o.send()}jQuery(document).ready(function(e){e(".c-input").each(function(t,i){var a=e(this),n=e(this).children(".c-input__input");e(this).children(".c-input__label");n.keyup(function(t){""==e(this).val()?a.removeClass("hide-label"):a.addClass("hide-label")}),n.change(function(t){""==e(this).val()?a.removeClass("hide-label"):a.addClass("hide-label")}),n.blur(function(e){""==n.val()&&a.removeClass("hide-label")})})}),jQuery(document).ready(function(e){e(".js-goto-section").click(function(t){t.preventDefault();var i=e(this).attr("data-section"),a=e("#"+i).offset().top;e("body, html").animate({scrollTop:a},500),e("body").removeClass("menu-open")})}),jQuery(document).ready(function(e){e(".js-form-close").click(function(t){e("body").removeClass("form-open")})}),jQuery(document).ready(function(e){e(".js-form-open").click(function(t){e("body").addClass("form-open")})}),jQuery(document).ready(function(e){e(".js-scroll-to-top").click(function(t){t.preventDefault(),e("body, html").animate({scrollTop:0},400)})});var map;jQuery(document).ready(function(e){e(".js-menu-toggle").click(function(t){e("body").toggleClass("menu-open")})}),jQuery(document).ready(function(e){e(".js-scroll-down-1").click(function(t){t.preventDefault(),e("body, html").animate({scrollTop:e(window).height()},400)}),e(".js-scroll-down-2").click(function(t){t.preventDefault();var i=2*e(window).height();e("body, html").animate({scrollTop:i},400)})}),svg4everybody(),jQuery(document).ready(function(e){function t(){for(var t=e(window).scrollTop(),i=document.getElementsByTagName("section"),a=i[0].getAttribute("id"),n=0;n<i.length;n++){var o=i[n].getAttribute("id"),s=i[n].offsetTop;t>=s&&(a=o)}for(var l=document.getElementsByClassName("js-update-on-scroll"),r=!1,n=0;n<l.length;n++){var c=l[n].getAttribute("data-section");c==a?(l[n].classList.add("is-active"),r=l[n].getAttribute("data-section")):l[n].classList.remove("is-active")}if(r===!1){l.length-1}}t(),e(window).scroll(function(e){t()})});
//# sourceMappingURL=data:application/json;base64,
